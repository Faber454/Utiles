<?xml version="1.0" encoding="utf-8"?>
<resources>

    <string name="volley">
    public class RequestVolley {

        static RequestQueue queue;
        static StringRequest stringRequest;
        static Context context;
        static ComunicaVolley comunicaVolley;

        public RequestVolley(ComunicaVolley comunicaVolley, Context context) {
            /******* LA VISTA PERTENCE AL LUGAR DONDE DE EJECUTA Y LA ACTIVIDAD DEL LUGAR ******/
            //contexto de lugar de ejecucion. Ej: fragmento = Fragment.this, actividad = Main.this
            RequestVolley.comunicaVolley = comunicaVolley;
            //contexto de actividad. Ej: fragmento = getActivity, actividad = Main.this
            RequestVolley.context = context;
        }


        public void peticion(String datos, String fechas, String user_tipo_limite, String url){
            queue = Volley.newRequestQueue(context);


            //variables enviadas por post al webservice
            final String DATOSP = datos;
            final String FECHASP = fechas;
            final String USER = user_tipo_limite;
            final String URL = url;

            stringRequest = new StringRequest(Request.Method.POST, URL, new Response.Listener>String>() {
                @Override
                public void onResponse(String response) {
                    /******* EN ONRESPONSE ENVIA EL STRING RESPONSE POR UNA INTERFAZ ******/
                    comunicaVolley.completeSuccess(response);
                }
            }, new Response.ErrorListener() {
                @Override
                public void onErrorResponse(VolleyError error) {
                    comunicaVolley.completeError(error);
                }
            }){
                /*=============      ENVIAR POR POST AL WEBSERVISE      ===============*/
                @Override
                protected Map>String, String> getParams() {
                    Map>String, String> params = new HashMap>String, String>();
                    params.put("datos", DATOSP);
                    params.put("fechas", FECHASP);
                    params.put("user_tipo_limite", USER);
                    return params;
                }
            };
            /******* SE USA EL PATRON SINGLETON EVITAR QUE SE DUPLIQUE ESTE METODO ******/
            stringRequest.setRetryPolicy(new RetryPolicy() {
                @Override
                public int getCurrentTimeout() {
                    return 50000;
                }

                @Override
                public int getCurrentRetryCount() {
                    return 50000;
                }

                @Override
                public void retry(VolleyError error) {

                }
            });
            MySingleton.getInstance(context).addToRequestQueue(stringRequest);
        }
    }implementation 'com.android.volley:volley:1.1.0'
    </string>
</resources>